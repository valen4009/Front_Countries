{"ast":null,"code":"import axios from \"axios\";\nimport { GET_COUNTRIES, GET_COUNTRY_DETAIL, GET_COUNTRY_BY_NAME, GET_ACTIVITIES, ADD_ACTIVITY } from \"./actions-types\";\nconst SERVER_URL = \"http://localhost:3001\";\nexport const getCountries = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`${SERVER_URL}/countries`);\n      const data = response.data;\n      return dispatch({\n        type: GET_COUNTRIES,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n  };\n};\nexport const getCountryDetail = id => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`${SERVER_URL}/countries/${id}`);\n      const data = response.data;\n      // const country = data.map(country => {\n      //     return{\n      //         id: country.id,\n      //         name: country.name,\n      //         flag: country.image,\n      //         region: country.region,\n      //         capital: country.capital,\n      //         continent: country.subregion,\n      //         area: country.area,\n      //         population: country.population,\n      //         activity: country.activity.map(activity => {\n      //             return{\n      //                 id: activity.id,\n      //                 name: activity.name,\n      //                 difficult: activity.difficult,\n      //                 duration: activity.duration,\n      //                 season: activity.season,\n      //             }\n      //         }),\n      //     }\n      // });\n      return dispatch({\n        type: GET_COUNTRY_DETAIL,\n        PAYLOAD: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n  };\n};\nexport const getCountryByName = name => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`${SERVER_URL}/countries/name?name=${name}`);\n      const data = response.data;\n      const countryName = data.map(country => {\n        return {\n          id: country.id,\n          name: country.name,\n          flag: country.image,\n          continent: country.region\n        };\n      });\n      // console.log(data)\n      return dispatch({\n        type: GET_COUNTRY_BY_NAME,\n        PAYLOAD: countryName\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n  };\n};\nexport const getActivities = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`${SERVER_URL}/activities`);\n      const data = response.data;\n      const activities = data.map(activity => {\n        return {\n          id: activity.id,\n          name: activity.name,\n          difficult: activity.difficult,\n          duration: activity.duration,\n          season: activity.season\n        };\n      });\n      return dispatch({\n        type: GET_ACTIVITIES,\n        PAYLOAD: activities\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n  };\n};\nexport const addActivity = activityData => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`${SERVER_URL}/activities`, activityData);\n      const activity = response.data;\n      return dispatch({\n        type: ADD_ACTIVITY,\n        payload: activity\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n  };\n};","map":{"version":3,"names":["axios","GET_COUNTRIES","GET_COUNTRY_DETAIL","GET_COUNTRY_BY_NAME","GET_ACTIVITIES","ADD_ACTIVITY","SERVER_URL","getCountries","dispatch","response","get","data","type","payload","error","console","log","getCountryDetail","id","PAYLOAD","getCountryByName","name","countryName","map","country","flag","image","continent","region","getActivities","activities","activity","difficult","duration","season","addActivity","activityData","post"],"sources":["C:/Users/valen/OneDrive/Escritorio/PI-Countries-main/client/src/Redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { GET_COUNTRIES, GET_COUNTRY_DETAIL, GET_COUNTRY_BY_NAME, GET_ACTIVITIES, ADD_ACTIVITY  } from \"./actions-types\";\r\n\r\nconst SERVER_URL = \"http://localhost:3001\";\r\n\r\nexport const getCountries = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`${SERVER_URL}/countries`);\r\n            const data = response.data;\r\n            return dispatch({ type: GET_COUNTRIES, payload: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n    };\r\n};\r\n\r\nexport const getCountryDetail = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`${SERVER_URL}/countries/${id}`)\r\n            const data = response.data;\r\n            // const country = data.map(country => {\r\n            //     return{\r\n            //         id: country.id,\r\n            //         name: country.name,\r\n            //         flag: country.image,\r\n            //         region: country.region,\r\n            //         capital: country.capital,\r\n            //         continent: country.subregion,\r\n            //         area: country.area,\r\n            //         population: country.population,\r\n            //         activity: country.activity.map(activity => {\r\n            //             return{\r\n            //                 id: activity.id,\r\n            //                 name: activity.name,\r\n            //                 difficult: activity.difficult,\r\n            //                 duration: activity.duration,\r\n            //                 season: activity.season,\r\n            //             }\r\n            //         }),\r\n            //     }\r\n            // });\r\n            return dispatch({ type: GET_COUNTRY_DETAIL, PAYLOAD: data });\r\n        } catch (error) {\r\n            console.log(error);    \r\n        };\r\n    };\r\n};\r\n\r\nexport const getCountryByName = (name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`${SERVER_URL}/countries/name?name=${name}`);\r\n            const data = response.data;\r\n            const countryName = data.map(country => {\r\n                return{\r\n                    id: country.id,\r\n                    name: country.name,\r\n                    flag: country.image,\r\n                    continent: country.region,\r\n                }\r\n            });\r\n            // console.log(data)\r\n            return dispatch({ type: GET_COUNTRY_BY_NAME, PAYLOAD: countryName });\r\n        } catch (error) {\r\n            console.log(error);  \r\n        };\r\n    };\r\n};\r\n\r\nexport const getActivities = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`${SERVER_URL}/activities`);\r\n            const data = response.data;\r\n            const activities = data.map(activity => {\r\n                return{\r\n                    id: activity.id,\r\n                    name: activity.name,\r\n                    difficult: activity.difficult,\r\n                    duration: activity.duration,\r\n                    season: activity.season,\r\n                };\r\n            });\r\n            return dispatch({ type: GET_ACTIVITIES, PAYLOAD: activities });\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n    };\r\n};\r\n\r\nexport const addActivity = (activityData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.post(`${SERVER_URL}/activities`, activityData);\r\n            const activity = response.data;\r\n            return dispatch({ type: ADD_ACTIVITY, payload: activity });\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n    };\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}