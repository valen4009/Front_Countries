{"ast":null,"code":"import { GET_COUNTRIES, GET_COUNTRY_DETAIL, GET_COUNTRY_BY_NAME, GET_ACTIVITIES, ADD_ACTIVITY, CHANGE_PAGE, ORDER_COUNTRIES } from \"./actions-types\";\nconst initialState = {\n  countries: [],\n  countryDetail: {},\n  activities: [],\n  newActivity: \"\",\n  page: 1\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case GET_COUNTRIES:\n      return {\n        ...state,\n        countries: payload\n      };\n    case GET_COUNTRY_DETAIL:\n      return {\n        ...state,\n        countryDetail: payload\n      };\n    case GET_COUNTRY_BY_NAME:\n      return {\n        ...state,\n        countries: payload\n      };\n    case GET_ACTIVITIES:\n      return {\n        ...state,\n        activities: payload\n      };\n    case ADD_ACTIVITY:\n      return {\n        ...state,\n        activity: payload\n      };\n    case CHANGE_PAGE:\n      return {\n        ...state,\n        page: payload\n      };\n    case ORDER_COUNTRIES:\n      // const { orderKey, order } = payload;\n      const {\n        orderOption\n      } = payload;\n      let orderCountries;\n      if (orderOption === 'name_asc') {\n        orderCountries = [...state.countries].sort((a, b) => a.name.localeCompare(b.name));\n      } else if (orderOption === 'name_desc') {\n        orderCountries = [...state.countries].sort((a, b) => b.name.localeCompare(a.name));\n      } else if (orderOption === 'population_asc') {\n        orderCountries = [...state.countries].sort((a, b) => a.population - b.population);\n      } else if (orderOption === 'population_desc') {\n        orderCountries = [...state.countries].sort((a, b) => b.population - a.population);\n      } else {\n        orderCountries = [...state.countries];\n      }\n\n      // if(order === 'asc') {\n      //     return valueA.localeCompare(valueB);\n      // }else{return valueB.localeCompare(valueA);}\n\n      return {\n        ...state,\n        countries: orderCountries\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n  ;\n};\nexport default reducer;","map":{"version":3,"names":["GET_COUNTRIES","GET_COUNTRY_DETAIL","GET_COUNTRY_BY_NAME","GET_ACTIVITIES","ADD_ACTIVITY","CHANGE_PAGE","ORDER_COUNTRIES","initialState","countries","countryDetail","activities","newActivity","page","reducer","state","arguments","length","undefined","type","payload","activity","orderOption","orderCountries","sort","a","b","name","localeCompare","population"],"sources":["C:/Users/valen/OneDrive/Escritorio/PI-Countries-main/client/src/Redux/reducer.js"],"sourcesContent":["import { GET_COUNTRIES, GET_COUNTRY_DETAIL, GET_COUNTRY_BY_NAME, GET_ACTIVITIES, ADD_ACTIVITY, CHANGE_PAGE, ORDER_COUNTRIES  } from \"./actions-types\";\r\n\r\nconst initialState = {\r\n    countries: [],\r\n    countryDetail: {},\r\n    activities: [],\r\n    newActivity: \"\",\r\n    page: 1,\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n    switch(type){\r\n        case GET_COUNTRIES:\r\n            return{\r\n                ...state,\r\n                countries: payload\r\n            }\r\n        case GET_COUNTRY_DETAIL:\r\n            return{\r\n                ...state,\r\n                countryDetail: payload\r\n            }\r\n        case GET_COUNTRY_BY_NAME:\r\n            return{\r\n                ...state,\r\n            countries: payload\r\n            }\r\n        case GET_ACTIVITIES:\r\n            return{\r\n                ...state,\r\n                activities: payload  \r\n            }\r\n        case ADD_ACTIVITY:\r\n            return{\r\n                ...state,\r\n                activity: payload\r\n            }\r\n        case CHANGE_PAGE:\r\n            return{\r\n                ...state,\r\n                page: payload\r\n            }\r\n        case ORDER_COUNTRIES:\r\n            // const { orderKey, order } = payload;\r\n            const { orderOption } = payload;\r\n            let orderCountries\r\n\r\n            if (orderOption === 'name_asc') {\r\n                orderCountries = [...state.countries].sort((a, b) =>\r\n                a.name.localeCompare(b.name)\r\n                );\r\n                } else if (orderOption === 'name_desc') {\r\n                    orderCountries = [...state.countries].sort((a, b) =>\r\n                    b.name.localeCompare(a.name)\r\n                    );\r\n                } else if (orderOption === 'population_asc') {\r\n                    orderCountries = [...state.countries].sort((a, b) => \r\n                    a.population - b.population\r\n                    );\r\n                } else if (orderOption === 'population_desc') {\r\n                    orderCountries = [...state.countries].sort((a, b) => \r\n                    b.population - a.population\r\n                    );\r\n                } else {\r\n                    orderCountries = [...state.countries];\r\n                }\r\n                    \r\n                // if(order === 'asc') {\r\n                //     return valueA.localeCompare(valueB);\r\n                // }else{return valueB.localeCompare(valueA);}\r\n\r\n            return {\r\n                ...state,\r\n                countries: orderCountries\r\n            };\r\n            \r\n        default:\r\n            return{\r\n                ...state,\r\n            };\r\n    };\r\n};\r\n\r\nexport default reducer;"],"mappings":"AAAA,SAASA,aAAa,EAAEC,kBAAkB,EAAEC,mBAAmB,EAAEC,cAAc,EAAEC,YAAY,EAAEC,WAAW,EAAEC,eAAe,QAAS,iBAAiB;AAErJ,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,aAAa,EAAE,CAAC,CAAC;EACjBC,UAAU,EAAE,EAAE;EACdC,WAAW,EAAE,EAAE;EACfC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,YAAY;EAAA,IAAE;IAAEW,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAOC,IAAI;IACP,KAAKlB,aAAa;MACd,OAAM;QACF,GAAGc,KAAK;QACRN,SAAS,EAAEW;MACf,CAAC;IACL,KAAKlB,kBAAkB;MACnB,OAAM;QACF,GAAGa,KAAK;QACRL,aAAa,EAAEU;MACnB,CAAC;IACL,KAAKjB,mBAAmB;MACpB,OAAM;QACF,GAAGY,KAAK;QACZN,SAAS,EAAEW;MACX,CAAC;IACL,KAAKhB,cAAc;MACf,OAAM;QACF,GAAGW,KAAK;QACRJ,UAAU,EAAES;MAChB,CAAC;IACL,KAAKf,YAAY;MACb,OAAM;QACF,GAAGU,KAAK;QACRM,QAAQ,EAAED;MACd,CAAC;IACL,KAAKd,WAAW;MACZ,OAAM;QACF,GAAGS,KAAK;QACRF,IAAI,EAAEO;MACV,CAAC;IACL,KAAKb,eAAe;MAChB;MACA,MAAM;QAAEe;MAAY,CAAC,GAAGF,OAAO;MAC/B,IAAIG,cAAc;MAElB,IAAID,WAAW,KAAK,UAAU,EAAE;QAC5BC,cAAc,GAAG,CAAC,GAAGR,KAAK,CAACN,SAAS,CAAC,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAChDD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAC3B,CAAC;MACD,CAAC,MAAM,IAAIL,WAAW,KAAK,WAAW,EAAE;QACpCC,cAAc,GAAG,CAAC,GAAGR,KAAK,CAACN,SAAS,CAAC,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAChDA,CAAC,CAACC,IAAI,CAACC,aAAa,CAACH,CAAC,CAACE,IAAI,CAC3B,CAAC;MACL,CAAC,MAAM,IAAIL,WAAW,KAAK,gBAAgB,EAAE;QACzCC,cAAc,GAAG,CAAC,GAAGR,KAAK,CAACN,SAAS,CAAC,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAChDD,CAAC,CAACI,UAAU,GAAGH,CAAC,CAACG,UACjB,CAAC;MACL,CAAC,MAAM,IAAIP,WAAW,KAAK,iBAAiB,EAAE;QAC1CC,cAAc,GAAG,CAAC,GAAGR,KAAK,CAACN,SAAS,CAAC,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAChDA,CAAC,CAACG,UAAU,GAAGJ,CAAC,CAACI,UACjB,CAAC;MACL,CAAC,MAAM;QACHN,cAAc,GAAG,CAAC,GAAGR,KAAK,CAACN,SAAS,CAAC;MACzC;;MAEA;MACA;MACA;;MAEJ,OAAO;QACH,GAAGM,KAAK;QACRN,SAAS,EAAEc;MACf,CAAC;IAEL;MACI,OAAM;QACF,GAAGR;MACP,CAAC;EACT;EAAC;AACL,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}