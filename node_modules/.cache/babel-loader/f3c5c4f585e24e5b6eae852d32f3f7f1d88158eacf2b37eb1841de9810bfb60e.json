{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valen\\\\OneDrive\\\\Escritorio\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { getCountryByName } from \"../../Redux/actions\";\n// import {useSelector, useDispatch} from \"react-redux\";\n// import React, { useEffect } from \"react\";\n// import Card from \"../Card/Card\";\n\n// const SearchBar = () => {\n//     const dispatch = useDispatch();\n//     const [name, setName] = useState(\"\");\n//     const country = useSelector((state) => state.country);\n//     console.log (country)\n\n//     useEffect(() => {\n//         dispatch(getCountryByName(name));\n//     }, [dispatch, name])\n\n//     const handleChange = (event) => {\n//         setName(event.target.value);\n//     }\n\n//     const submitHandler = (event) => {\n//         event.preventDefault();\n//         dispatch(getCountryByName(name))\n//     }\n\n//     return(\n//         <div>\n//             <input type=\"search\" onChange={handleChange} value={name} />\n//             <button onClick={submitHandler}>Search</button>\n//             <div>\n//                 {country.map(({ id, name, flag, continent }) => {\n//                     return (\n//                         <Card\n//                             key={id}\n//                             id={id}\n//                             name={name}\n//                             flag={flag}\n//                             continent={continent}\n//                         />\n//                     )   \n//                 })}\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default SearchBar;\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getCountryByName } from \"../../Redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const handlerChange = event => {\n    setName(event.target.value);\n    console.log(event.target.value);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    dispatch(getCountryByName(name));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar...\",\n      onChange: handlerChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: submitHandler,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"mefwMeSMz5nMD3yq1C2mDJX3wZw=\", false, function () {\n  return [useDispatch];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","useDispatch","getCountryByName","jsxDEV","_jsxDEV","SearchBar","_s","dispatch","name","setName","handlerChange","event","target","value","console","log","submitHandler","preventDefault","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/valen/OneDrive/Escritorio/PI-Countries-main/client/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { getCountryByName } from \"../../Redux/actions\";\r\n// import {useSelector, useDispatch} from \"react-redux\";\r\n// import React, { useEffect } from \"react\";\r\n// import Card from \"../Card/Card\";\r\n\r\n// const SearchBar = () => {\r\n//     const dispatch = useDispatch();\r\n//     const [name, setName] = useState(\"\");\r\n//     const country = useSelector((state) => state.country);\r\n//     console.log (country)\r\n\r\n//     useEffect(() => {\r\n//         dispatch(getCountryByName(name));\r\n//     }, [dispatch, name])\r\n\r\n//     const handleChange = (event) => {\r\n//         setName(event.target.value);\r\n//     }\r\n\r\n//     const submitHandler = (event) => {\r\n//         event.preventDefault();\r\n//         dispatch(getCountryByName(name))\r\n//     }\r\n\r\n//     return(\r\n//         <div>\r\n//             <input type=\"search\" onChange={handleChange} value={name} />\r\n//             <button onClick={submitHandler}>Search</button>\r\n//             <div>\r\n//                 {country.map(({ id, name, flag, continent }) => {\r\n//                     return (\r\n//                         <Card\r\n//                             key={id}\r\n//                             id={id}\r\n//                             name={name}\r\n//                             flag={flag}\r\n//                             continent={continent}\r\n//                         />\r\n//                     )   \r\n//                 })}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default SearchBar;\r\n\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCountryByName } from \"../../Redux/actions\"\r\n\r\nconst SearchBar = () => {\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const handlerChange = (event) => {\r\n        setName(event.target.value);\r\n        console.log(event.target.value);\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        dispatch(getCountryByName(name))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input type=\"text\" placeholder=\"Buscar...\" onChange={handlerChange}/>\r\n            <button type=\"submit\" onClick={submitHandler}>Buscar</button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBar;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,aAAa,GAAIC,KAAK,IAAK;IAC7BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMG,aAAa,GAAIL,KAAK,IAAK;IAC7BA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtBV,QAAQ,CAACL,gBAAgB,CAACM,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,oBACIJ,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,WAAW;MAACC,QAAQ,EAAEX;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrErB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAEV,aAAc;MAAAE,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAId,CAAC;AAAAnB,EAAA,CAtBKD,SAAS;EAAA,QACMJ,WAAW;AAAA;AAAA0B,EAAA,GAD1BtB,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}