{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valen\\\\OneDrive\\\\Escritorio\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport Card from \"../Card/Card\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changePage, orderCountries } from \"../../Redux/actions\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const countries = useSelector(state => state.countries);\n  const dispatch = useDispatch();\n  const page = useSelector(state => state.page);\n  const itemsPerPage = 10;\n  const start = (page - 1) * itemsPerPage;\n  const end = start + itemsPerPage;\n  const pageItems = countries.slice(start, end);\n  const handleChange = pageNumber => {\n    dispatch(changePage(pageNumber));\n  };\n  const [orderKey, setOrderKey] = useState(null);\n  const [order, setOrder] = useState('asc');\n  const handleOrder = key => {\n    if (key === orderKey) {\n      const newOrder = order === 'asc' ? 'desc' : 'asc';\n      setOrder(newOrder);\n    } else {\n      setOrderKey(key);\n      setOrder('asc');\n    }\n    dispatch(orderCountries(key, order));\n  };\n  const [expanded, setExpanded] = useState(false);\n  const changeExpanded = () => {\n    setExpanded(!expanded);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOrder('name'),\n      children: \"Ordenar por nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOrder('population'),\n      children: \"Ordenar por population\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this),\n    // countries?.map(({ id, name, image, region  }) => {\n    pageItems.map(_ref => {\n      let {\n        id,\n        name,\n        image,\n        region,\n        population\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: id,\n        name: name,\n        image: image,\n        region: region,\n        population: population\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleChange(page - 1),\n      children: \"\\uD83E\\uDC78\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleChange(page + 1),\n      children: \"\\uD83E\\uDC7A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Cards, \"r/DfT1h5SYDlAT6qWo8WUIreUj4=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Card","useDispatch","useSelector","changePage","orderCountries","useState","jsxDEV","_jsxDEV","Cards","_s","countries","state","dispatch","page","itemsPerPage","start","end","pageItems","slice","handleChange","pageNumber","orderKey","setOrderKey","order","setOrder","handleOrder","key","newOrder","expanded","setExpanded","changeExpanded","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref","id","name","image","region","population","_c","$RefreshReg$"],"sources":["C:/Users/valen/OneDrive/Escritorio/PI-Countries-main/client/src/components/Cards/Cards.jsx"],"sourcesContent":["import Card from \"../Card/Card\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { changePage, orderCountries } from \"../../Redux/actions\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst Cards = () => {\r\n    const countries = useSelector((state) => state.countries);\r\n    const dispatch = useDispatch();\r\n\r\n    const page = useSelector((state) => state.page);\r\n    const itemsPerPage = 10;\r\n    const start = (page - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    const pageItems = countries.slice(start, end);\r\n\r\n    const handleChange = (pageNumber) => {\r\n        dispatch(changePage(pageNumber));\r\n    }\r\n\r\n\r\n    const [orderKey, setOrderKey] = useState(null);\r\n    const [order, setOrder] = useState('asc');\r\n\r\n    const handleOrder = (key) => {\r\n        if (key === orderKey){\r\n        const newOrder = order === 'asc' ? 'desc' : 'asc';\r\n        setOrder(newOrder);\r\n        }else{\r\n            setOrderKey(key);\r\n            setOrder('asc');\r\n        }\r\n\r\n        dispatch(orderCountries(key, order))\r\n    }\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const changeExpanded = () => {\r\n        setExpanded(!expanded);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => handleOrder('name')}>Ordenar por nombre</button>\r\n            <button onClick={() => handleOrder('population')}>Ordenar por population</button>\r\n            {\r\n                // countries?.map(({ id, name, image, region  }) => {\r\n                pageItems.map(({ id, name, image, region, population  }) => {\r\n                    return (\r\n                        <Card\r\n                            key={id}\r\n                            id={id}\r\n                            name={name}\r\n                            image={image}\r\n                            region={region}\r\n                            population={population}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            <button onClick={() => handleChange(page - 1)}>ðŸ¡¸</button>\r\n            <button onClick={() => handleChange(page + 1)}>ðŸ¡º</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}